pipeline {
    agent any
	tools {
        gradle 8.8 
    }
    environment {
        DOCKER_CREDENTIALS_ID = 'docker-hub-credentials'
        DOCKER_IMAGE = '1141142/devops1141142'
        DOCKER_TAG = "${env.BUILD_ID}"
    }

    stages {
        stage('Checkout') {
             steps {
                 echo 'Checking out...'
                 git branch: 'main', url: 'https://github.com/1141142TF/devops-23-24-JPE-1141142.git'
               }
        }

        stage('Assemble') {
            steps {
						echo 'Assembling...'
						dir('CA2 Part2/react-and-spring-data-rest-basic') {
						sh 'gradle init'
						sh 'gradle wrapper build'
						sh 'chmod +x gradlew'
                        sh './gradlew assemble'
                    }
            }
        }

        stage('Test') {
            steps {
					echo 'Testing...'
					dir('CA2 Part2/react-and-spring-data-rest-basic') { 
                    sh './gradlew test'
                }
            }
        }

        stage('Javadoc') {
            steps {
				echo 'Generating Javadoc...'
                dir('CA2 Part2/react-and-spring-data-rest-basic') {
                    sh './gradlew javadoc'
                    publishHTML(target: [
                        allowMissing: false,
                        alwaysLinkToLastBuild: false,
                        keepAll: true,
                        reportDir: 'build/docs/javadoc',
                        reportFiles: 'index.html',
                        reportName: 'Javadoc'
                    ])
                }
            }
        }

        stage('Archive') {
            steps {
				echo 'Archiving...'
                dir('CA2 Part2/react-and-spring-data-rest-basic') {
					archiveArtifacts artifacts: 'build/libs/*.jar', fingerprint: true
                }
            }
        }

        stage('Create Dockerfile') {
            steps {
                dir('CA2 Part2/react-and-spring-data-rest-basic') {
                    script {
                        def dockerfileContent = """
                        FROM gradle:jdk17
                        WORKDIR /app
						COPY . /app
						EXPOSE 8080
						RUN chmod +x gradle
						RUN gradle clean build
						CMD gradle bootRun
                        """
                        writeFile file: 'Dockerfile', text: dockerfileContent
                    }
                }
            }
        }

        stage('Build and publish Image') {
            steps {
                script {
                    echo 'Building and publishing Docker image...'
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_CREDENTIALS_ID}") {
                        dir('CA2 Part2/react-and-spring-data-rest-basic') {
                            def localImage = docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}")
                            localImage.push()
                            localImage.push('latest')
                        }
                    }
                }
            }
        }

        stage('Run Container') {
            steps {
                script {
                    echo 'Running Docker container...'
                    sh "docker run -d -p 8080:8080 ${DOCKER_IMAGE}:latest"
                }
            }
        }
    }
}